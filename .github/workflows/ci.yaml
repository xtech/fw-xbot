name: CI

on:
  pull_request:
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
      - 'feature/*'

jobs:
  pre-commit:
    name: "Run Pre-Commit Checks"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1
  artifacts:
    name: "Build Artifacts"
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        with:
          push: false
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=local,dest=./out
      - name: Copy Artifacts
        run: |
          mkdir artifacts
          cp ./out/xbot-firmware.bin ./artifacts
          cp ./out/xbot-firmware.elf ./artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xbot-firmware
          path: artifacts/
  tagged-release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    needs: artifacts
    steps:
      - name: Download artifacts from build stage
        uses: actions/download-artifact@v4
        with:
          name: xbot-firmware
          path: artifacts
      - name: Compress release directory into a versioned ZIP file
        run: zip -r "xcore-boot-${{ github.ref_name }}.zip" artifacts/*
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: "xcore-boot-${{ github.ref_name }}.zip"
